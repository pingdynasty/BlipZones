/*
  ==============================================================================

    This file was auto-generated by the Jucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#include "../JuceLibraryCode/JuceHeader.h"
#include "MainWindow.h"
#include "SimWindow.h"
#include "BlipSim.h"
#include "BlipClient.h"
#include "ApplicationConfiguration.h"
#include "ApplicationSettingsComponent.h"

//==============================================================================
class BlipZonesApplication  : public JUCEApplication
{
public:
    //==============================================================================
    BlipZonesApplication()
    {
    }

    ~BlipZonesApplication()
    {
    }

    //==============================================================================
    void initialise (const String& commandLine)
    {
      // Do your application's initialisation code here..
      ApplicationConfiguration::initialise();
      mainWindow = new MainAppWindow();
      if(!ApplicationConfiguration::getApplicationProperties()->getFile().exists()){
	ApplicationSettingsComponent component;
	component.showModalDialog(mainWindow);
      }
      simWindow = new SimWindow();
      ApplicationConfiguration::getBlipSim()->start();
      ApplicationConfiguration::getBlipClient()->connect();
    }

    void shutdown()
    {
      std::cerr << "shutdown" << std::endl;
        // Do your application's shutdown code here..
      ApplicationConfiguration::getBlipClient()->shutdown();
      ApplicationConfiguration::getBlipSim()->shutdown();
      ApplicationConfiguration::release();      
      mainWindow = 0;
      simWindow = 0;
    }

    //==============================================================================
    void systemRequestedQuit()
    {
        quit();
    }

    //==============================================================================
    const String getApplicationName()
    {
      return T("BlipZones");
    }

    const String getApplicationVersion()
    {
        return T("2.0");      
//         return ProjectInfo::versionString;
    }

    bool moreThanOneInstanceAllowed()
    {
        return true;
    }

    void anotherInstanceStarted (const String& commandLine)
    {
        
    }

private:

  // todo: windows may both have deleted themselves
  ScopedPointer <MainAppWindow> mainWindow;
  ScopedPointer <SimWindow> simWindow;
};


//==============================================================================
// This macro generates the main() routine that starts the app.
START_JUCE_APPLICATION(BlipZonesApplication)
